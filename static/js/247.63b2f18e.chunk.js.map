{"version":3,"file":"static/js/247.63b2f18e.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAGaC,EAAc,mCAAG,6GAEHD,EAAAA,EAAAA,IAAA,6BALX,6CAKsD,CAChEE,QAAS,CACPC,OAAQ,mBACRC,cACE,gOANoB,cAEpBC,EAFoB,yBASnBA,EAASC,KAAKC,SATK,gCAW1BC,QAAQC,IAAR,MAX0B,yDAAH,qDAgBdC,EAAa,mCAAG,WAAMC,GAAN,gGAEFX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,mBAAwC,CAC7DT,QAAS,CACPC,OAAQ,mBACRC,cACE,gOANmB,cAEnBC,EAFmB,yBASlBA,EAASC,MATS,gCAWzBE,QAAQC,IAAR,MAXyB,yDAAH,sDAgBbG,EAAS,mCAAG,WAAMD,GAAN,gGAEEX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,2BAAiD,CACtET,QAAS,CACPC,OAAQ,mBACRC,cACE,gOANe,cAEfC,EAFe,yBASdA,EAASC,KAAKO,MATA,gCAWrBL,QAAQC,IAAR,MAXqB,yDAAH,sDAgBTK,EAAY,mCAAG,WAAMH,GAAN,gGAEDX,EAAAA,EAAAA,IAAA,iBACXW,EADW,kCAErB,CACET,QAAS,CACPC,OAAQ,mBACRC,cACE,gOARgB,cAElBC,EAFkB,yBAYjBA,EAASC,KAAKC,SAZG,gCAcxBC,QAAQC,IAAR,MAdwB,yDAAH,sDAmBZM,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,kBAEDjB,EAAAA,EAAAA,IAAA,6BACCgB,EADD,oDACkDC,GACvE,CACEf,QAAS,CACPC,OAAQ,mBACRC,cACE,gOARgB,cAElBC,EAFkB,yBAYjBA,EAASC,MAZQ,gCAcxBE,QAAQC,IAAR,MAdwB,yDAAH,qD,yGCpBzB,UAjDc,WACZ,OAAwCS,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,8GAEYZ,EAAAA,EAAAA,GAAUS,GAFtB,QAELI,EAFK,SAITL,EAAgBK,GAJP,gDAOXjB,QAAQC,IAAR,MAPW,yDAAH,qDAUZe,GACD,GAAE,CAACH,KAGF,yBACGF,EAAaO,QACZ,wBACGP,EAAaQ,KAAI,SAAAC,GAChB,IAAQC,EAA6CD,EAA7CC,KAAMC,EAAuCF,EAAvCE,aAAcC,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACvC,OACE,2BACE,gBACEC,IACEH,EA1BC,kCA2BgBA,EACb,uGAENI,IAAKL,KAEP,uBAAIA,KACJ,uBAAIE,MAVGC,EAaZ,OAGH,+CAIP,C","sources":["components/API.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=5be1c9c05ef299ccfab1d8ad724f7561';\n\n// search all movies\nexport const fetchAllMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day${API_KEY}`, {\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YmUxYzljMDVlZjI5OWNjZmFiMWQ4YWQ3MjRmNzU2MSIsInN1YiI6IjY1Mzc4OTQ2MWY3NDhiMDBhZTEyZTE2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p_ieqSURgaK9kCC0WXwowgoFGd8OI5KgBv1Xli0uCL4',\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// search movie by ID\nexport const fetchOneMovie = async id => {\n  try {\n    const response = await axios.get(`movie/${id}?language=en-US`, {\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YmUxYzljMDVlZjI5OWNjZmFiMWQ4YWQ3MjRmNzU2MSIsInN1YiI6IjY1Mzc4OTQ2MWY3NDhiMDBhZTEyZTE2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p_ieqSURgaK9kCC0WXwowgoFGd8OI5KgBv1Xli0uCL4',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// search by cast\nexport const fetchCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?language=en-US`, {\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YmUxYzljMDVlZjI5OWNjZmFiMWQ4YWQ3MjRmNzU2MSIsInN1YiI6IjY1Mzc4OTQ2MWY3NDhiMDBhZTEyZTE2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p_ieqSURgaK9kCC0WXwowgoFGd8OI5KgBv1Xli0uCL4',\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// search by review\nexport const fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?language=en-US&page=1`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YmUxYzljMDVlZjI5OWNjZmFiMWQ4YWQ3MjRmNzU2MSIsInN1YiI6IjY1Mzc4OTQ2MWY3NDhiMDBhZTEyZTE2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p_ieqSURgaK9kCC0WXwowgoFGd8OI5KgBv1Xli0uCL4',\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetch By Query\nexport const fetchByQuery = async (query, page = 1) => {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`,\n      {\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZjZjZmM3NjljMjA1N2IwMGY5YzQxNDgxZTE0Zjk1ZiIsInN1YiI6IjY0OWIwYzQxMGU1YWJhMDEzOWRlOThhNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RgrZWZjw6R6HE8zHjFBAbKz3jQPlE2t--sCg4ktddXs',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCast } from '../API';\n\nconst Casts = () => {\n  const [selectedCast, setSelectedCast] = useState([]);\n\n  const { movieId } = useParams();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\n  useEffect(() => {\n    const result = async () => {\n      try {\n        const elements = await fetchCast(movieId);\n        if (elements) {\n          setSelectedCast(elements);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    result();\n  }, [movieId]);\n\n  return (\n    <div>\n      {selectedCast.length ? (\n        <ul>\n          {selectedCast.map(card => {\n            const { name, profile_path, character, credit_id } = card;\n            return (\n              <li key={credit_id}>\n                <img\n                  src={\n                    profile_path\n                      ? imgBaseUrl + profile_path\n                      : 'https://www.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg'\n                  }\n                  alt={name}\n                />\n                <p>{name}</p>\n                <p>{character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No Casts available</p>\n      )}\n    </div>\n  );\n};\n\nexport default Casts;\n"],"names":["axios","fetchAllMovies","headers","accept","Authorization","response","data","results","console","log","fetchOneMovie","id","fetchCast","cast","fetchReviews","fetchByQuery","query","page","useState","selectedCast","setSelectedCast","movieId","useParams","useEffect","result","elements","length","map","card","name","profile_path","character","credit_id","src","alt"],"sourceRoot":""}